generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Level {
  BASICO
  INTERMEDIO
  AVANZADO
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  name       String?
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())

  // NextAuth relations
  accounts   Account[]
  sessions   Session[]
}

model Category {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  slug  String @unique
  videos Video[]   // ← campo inverso
}

model Video {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  level         Level
  published     Boolean    @default(false)
  muxPlaybackId String?
  createdAt     DateTime   @default(now())

  // relación por referencia
  categoryId    String?    @db.ObjectId
  category      Category?  @relation(fields: [categoryId], references: [id])
}

// NextAuth models para Prisma Adapter en MongoDB
model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  user               User    @relation(fields: [userId], references: [id])
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model VerificationToken {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String
  token       String   @unique
  expires     DateTime

  @@unique([identifier, token])
}
